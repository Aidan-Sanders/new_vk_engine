#version 460

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout (set = 0, binding = 0, rgba16) uniform writeonly image2D out_frame;

layout (set = 0, binding = 1, rgba16) uniform readonly image3D cloudtex;

layout (set = 0, binding = 2) uniform readonly EXTENT
{
    vec2 value;
} extent;

layout (set = 0, binding = 3) uniform readonly CAMERA
{
    float znear;
    float zfar;
    vec4 pos;
    vec4 dir;
} camera;

void main()
{
    uint x = 8 * gl_WorkGroupID.x + gl_LocalInvocationID.x;
    uint y = 8 * gl_WorkGroupID.y + gl_LocalInvocationID.y;
    vec3 o = vec3(0.f, 0.f, 0.f);
    vec3 d = vec3(0.f, 0.f, 1.f);
    vec3 upperleft = d - vec3(extent.value.x / 2, -extent.value.y / 2, 0.f);
    vec3 r = upperleft + vec3(float(x) / (8 * gl_NumWorkGroups.x) * extent.value.x,
                            -(float(y) / (8 * gl_NumWorkGroups.y) * extent.value.y), 0.f);
    vec4 color = vec4(r, 1.f);
    imageStore(out_frame, ivec2(x, y), color);
}